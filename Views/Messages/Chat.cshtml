@model SignalRMessenger.ViewModels.ChatViewModel
@using System.Security.Claims

@{
    ViewData["Title"] = "Chat with " + Model.Receiver.UserName;
    var currentUserId = User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier);
}

<h2 class="mb-4">Chat with @Model.Receiver.UserName</h2>

<div id="chat-box" class="border rounded p-3 mb-3" style="height: 400px; overflow-y: scroll;">
    @foreach (var message in Model.Messages)
    {
        // Align messages from the current user to the right, others to the left
        var messagePosition = message.SenderId == currentUserId ? "d-flex justify-content-end" : "d-flex justify-content-start";
        var messageColor = message.SenderId == currentUserId ? "bg-primary text-white" : "bg-light";

        <div class="@messagePosition mb-2">
            <div class="p-2 rounded @messageColor" style="max-width: 70%;">
                <p class="mb-0">@message.Content</p>
                <small class="text-muted d-block text-end">@message.Timestamp.ToLocalTime().ToString("g")</small>
            </div>
        </div>
    }
</div>

<form asp-action="Create" method="post">
    <input type="hidden" name="receiverId" value="@Model.Receiver.Id" />
    <div class="input-group">
        <input type="text" name="content" class="form-control" placeholder="Type a message..." autocomplete="off" />
        <button type="submit" class="btn btn-primary">Send</button>
    </div>
</form>
